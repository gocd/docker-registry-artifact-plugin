/*
 * Copyright 2017 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'
apply from: "https://raw.githubusercontent.com/gocd/gocd-plugin-gradle-task-helpers/master/helper.gradle?_=${(int) (new Date().toInstant().epochSecond / 60)}"

gocdPlugin {
  id = 'cd.go.artifact.docker.registry'
  pluginVersion = '1.3.0'
  goCdVersion = '20.9.0'
  name = 'Artifact plugin for docker'
  description = 'Plugin allows to push/pull docker image from public or private docker registry'
  vendorName = 'ThoughtWorks, Inc.'
  vendorUrl = 'https://github.com/gocd/docker-registry-artifact-plugin'

  githubRepo {
    owner = System.getenv('GITHUB_USER') ?: 'bob'
    repo = 'docker-registry-artifact-plugin'
    token = System.getenv('GITHUB_TOKEN') ?: 'bad-token'
  }

  pluginProject = project

  prerelease = !"No".equalsIgnoreCase(System.getenv('PRERELEASE'))
  assetsToRelease = [project.tasks.findByName('jar')]
}

version = gocdPlugin.fullVersion(project)

repositories {
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

dependencies {
    compileOnly group: 'cd.go.plugin', name: 'go-plugin-api', version: '22.1.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'
    implementation group: 'com.spotify', name: 'docker-client', version: '8.16.0'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-ecr', version: '1.12.237'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-sts', version: '1.12.233'

    modules {
        module('commons-logging:commons-logging') {
            replacedBy('org.slf4j:jcl-over-slf4j', "Everything should go via SLF4J")
        }
    }
    implementation group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.36'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.8.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.8.2'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.2'

    testImplementation group: 'cd.go.plugin', name: 'go-plugin-api', version: '21.4.0'
    testImplementation group: 'uk.org.webcompere', name: 'system-stubs-jupiter', version: '2.0.1'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.23.1'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.6.1'
    testImplementation group: 'org.skyscreamer', name: 'jsonassert', version: '1.5.0'
    testImplementation group: 'org.jsoup', name: 'jsoup', version: '1.15.1'
}

test {
    useJUnitPlatform()
}

jar {
    from(configurations.runtimeClasspath) {
        into "lib/"
    }
}
