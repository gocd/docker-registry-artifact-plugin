/*
 * Copyright 2022 Thoughtworks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'
apply from: "https://raw.githubusercontent.com/gocd/gocd-plugin-gradle-task-helpers/master/helper.gradle?_=${(int) (new Date().toInstant().epochSecond / 60)}"

gocdPlugin {
    id = 'cd.go.artifact.docker.registry'
    pluginVersion = '1.4.0'
    goCdVersion = '20.9.0'
    name = 'Artifact plugin for docker'
    description = 'Plugin allows to push/pull docker image from public or private docker registry'
    vendorName = 'Thoughtworks, Inc.'
    vendorUrl = 'https://github.com/gocd/docker-registry-artifact-plugin'

    githubRepo {
        owner = System.getenv('GITHUB_USER') ?: 'bob'
        repo = 'docker-registry-artifact-plugin'
        token = System.getenv('GITHUB_TOKEN') ?: 'bad-token'
    }

    pluginProject = project

    prerelease = !"No".equalsIgnoreCase(System.getenv('PRERELEASE'))
    assetsToRelease = [project.tasks.findByName('jar')]
}

version = gocdPlugin.fullVersion(project)

repositories {
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

ext {
    deps = [
        gocdPluginApi: 'cd.go.plugin:go-plugin-api:24.4.0',
        awsSdk       : 'com.amazonaws:aws-java-sdk:1.12.780',
        slf4j        : 'org.slf4j:slf4j-api:2.0.16',
    ]

    versions = project.ext.deps.collectEntries { lib, libGav -> [lib, libGav.split(':').last()] }
}

dependencies {
    compileOnly project.deps.gocdPluginApi
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.11.0'
    implementation group: 'com.spotify', name: 'docker-client', version: '8.16.0'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-ecr', version: project.versions.awsSdk
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-sts', version: project.versions.awsSdk

    // Control/upgrade Spotify docker-client transitive dependencies
    implementation platform('com.fasterxml.jackson:jackson-bom:2.18.2')
    implementation platform('org.glassfish.jersey:jersey-bom:2.25')
    constraints {
        implementation('com.google.guava:guava:33.4.0-jre') {
            because "Spotify docker-client uses an older version"
        }
        implementation(project.deps.slf4j) {
            because "Spotify docker-client uses an older version"
        }
        implementation('org.apache.commons:commons-compress:1.27.1') {
            because "Spotify docker-client uses an older version"
        }
        implementation('commons-io:commons-io:2.18.0') {
            because "Spotify docker-client uses an older version"
        }
    }

    components {
        // workaround for Guava metadata declaring dependencies that are not needed at runtime
        // see https://github.com/google/guava/pull/6606
        withModule('com.google.guava:guava', { details ->
            details.allVariants {
                withDependencies {
                    removeAll {
                        it.name in [ "jsr305", "checker-qual", "error_prone_annotations", "listenablefuture", "j2objc-annotations" ]
                    }
                }
            }
        })
    }

    modules {
        module('commons-logging:commons-logging') {
            replacedBy('org.slf4j:jcl-over-slf4j', "Everything should go via SLF4J")
        }
        module('org.bouncycastle:bcpkix-jdk15on') {
            replacedBy('org.bouncycastle:bcpkix-jdk18on', "Everything can go via the JDK 1.8+ BouncyCastle version")
        }
    }
    implementation('org.bouncycastle:bcpkix-jdk18on:1.79')
    implementation group: 'org.slf4j', name: 'jcl-over-slf4j', version: project.versions.slf4j

    testImplementation platform('org.junit:junit-bom:5.11.3')
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine'
    testRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-launcher'

    testImplementation project.deps.gocdPluginApi
    testImplementation group: 'uk.org.webcompere', name: 'system-stubs-jupiter', version: '2.1.7'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.26.3'
    testImplementation platform('org.mockito:mockito-bom:5.14.2')
    testImplementation group: 'org.mockito', name: 'mockito-core'
    testImplementation group: 'org.skyscreamer', name: 'jsonassert', version: '1.5.3'
    testImplementation group: 'org.jsoup', name: 'jsoup', version: '1.18.3'
}

test {
    useJUnitPlatform()
}

jar {
    from(configurations.runtimeClasspath) {
        into "lib/"
    }
}
